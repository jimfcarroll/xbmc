<%
    matcher = type =~ /std::vector<\((.*)\)>/
    vectype = matcher[0][1]
    boolean ispointer = swigTypeParser.SwigType_ispointer(type)
    String accessor = ispointer ? '->' : '.'
%>

    ${result} = PyList_New(0);
<%
    if (ispointer)
    {
%>
    if (${api} != NULL)
    { 
<%  }  %>
      for (std::vector<${vectype}>::iterator iter = ${api}${accessor}begin(); iter != ${api}${accessor}end(); ++iter)
      {
        const ${swigTypeParser.SwigType_str(swigTypeParser.SwigType_ltype(vectype))}& entry = *iter;
        PyObject* pyentry;
        ${helper.getOutConversion(vectype,method,[ 'result' : 'pyentry', 'api' : 'entry' ])}
        PyList_Append(${result}, pyentry);
      }
<%
    if (ispointer)
    {
%>
    }
<%  }  %>
